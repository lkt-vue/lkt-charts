import * as d3 from "d3";
import { IChartOptions } from "../types/IChartOptions";
import { IChartSizing } from "../types/IChartSizing";
import { InternSet } from "d3";
import { IChartAxisY } from "../types/IChartAxisY";
import { IChartAxisX } from "../types/IChartAxisX";
import { IChartColor } from "../types/IChartColor";
export declare abstract class Chart implements IChartOptions, IChartSizing, IChartAxisY, IChartAxisX, IChartColor {
    x: (d: any, i: any) => any;
    y: (d: any) => any;
    title: string | Function | number | boolean;
    marginTop: number;
    marginRight: number;
    marginBottom: number;
    marginLeft: number;
    width: number;
    height: number;
    xDomain: InternSet | any[];
    xRange: number[];
    yType: typeof d3.scaleLinear;
    yDomain: InternSet | any[];
    yRange: number[];
    xPadding: number;
    yFormat: string;
    yLabel: string;
    color: string;
    X: any;
    Y: any;
    I: any;
    xScale: any;
    yScale: any;
    xAxis: any;
    yAxis: any;
    data: Iterable<any>;
    protected constructor(data: Iterable<any>, { title, }?: IChartOptions);
    setSizing(sizing: IChartSizing): Chart;
    setAxisYScaleLinear(): Chart;
    setAxisY(settings: IChartAxisY): Chart;
    setAxisX(settings: IChartAxisX): Chart;
    setColor(settings: IChartColor): Chart;
    prepare(): this;
    abstract getSVG(): SVGSVGElement;
}
